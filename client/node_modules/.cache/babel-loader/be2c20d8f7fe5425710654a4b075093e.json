{"ast":null,"code":"import _classCallCheck from \"/Users/daniel/Development/world-factbook/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/daniel/Development/world-factbook/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/daniel/Development/world-factbook/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/daniel/Development/world-factbook/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/daniel/Development/world-factbook/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/daniel/Development/world-factbook/src/containers/MapContainer.js\";\nimport React, { Component } from 'react';\nimport MapView from '../components/MapView';\nimport WorldMap from '../components/WorldMap';\nimport { geoPath } from \"d3-geo\";\n\nvar MapContainer =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(MapContainer, _Component);\n\n  function MapContainer() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, MapContainer);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(MapContainer)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      searchTerm: '',\n      center: [0, 0] // handleGeographyClick(geography) {\n      //   // geography looks something like this:\n      //   // { type: \"Feature\",  properties: {...}, geometry: {...} }\n      //   const path = geoPath().projection(this.projection())\n      //   const centroid = this.projection().invert(path.centroid(geography))\n      //   this.setState({\n      //     center: centroid,\n      //     currentCountry: geography.properties.iso_a3,\n      //   })\n      //\n      // }\n\n    };\n    return _this;\n  }\n\n  _createClass(MapContainer, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        },\n        __self: this\n      }, \"// \", React.createElement(MapView, {\n        center: this.state.center,\n        handleGeographyClick: this.handleGeographyClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      }), React.createElement(WorldMap, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return MapContainer;\n}(Component);\n\nexport default MapContainer;","map":{"version":3,"sources":["/Users/daniel/Development/world-factbook/src/containers/MapContainer.js"],"names":["React","Component","MapView","WorldMap","geoPath","MapContainer","state","searchTerm","center","handleGeographyClick"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,OAAP,MAAoB,uBAApB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,SAASC,OAAT,QAAwB,QAAxB;;IAGMC,Y;;;;;;;;;;;;;;;;;UACJC,K,GAAQ;AACNC,MAAAA,UAAU,EAAE,EADN;AAENC,MAAAA,MAAM,EAAE,CAAC,CAAD,EAAI,CAAJ,CAFF,CAKR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAfQ,K;;;;;;6BAiBC;AACP,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACK,oBAAC,OAAD;AAAS,QAAA,MAAM,EAAE,KAAKF,KAAL,CAAWE,MAA5B;AAAoC,QAAA,oBAAoB,EAAE,KAAKC,oBAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADL,EAEE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,CADF;AAMD;;;;EAzBwBR,S;;AA4B3B,eAAeI,YAAf","sourcesContent":["import React, { Component } from 'react';\nimport MapView from '../components/MapView'\nimport WorldMap from '../components/WorldMap'\nimport { geoPath } from \"d3-geo\"\n\n\nclass MapContainer extends Component {\n  state = {\n    searchTerm: '',\n    center: [0, 0]\n  }\n\n  // handleGeographyClick(geography) {\n  //   // geography looks something like this:\n  //   // { type: \"Feature\",  properties: {...}, geometry: {...} }\n  //   const path = geoPath().projection(this.projection())\n  //   const centroid = this.projection().invert(path.centroid(geography))\n  //   this.setState({\n  //     center: centroid,\n  //     currentCountry: geography.properties.iso_a3,\n  //   })\n  //\n  // }\n\n  render() {\n    return (\n      <div>\n        // <MapView center={this.state.center} handleGeographyClick={this.handleGeographyClick}></MapView>\n        <WorldMap ></WorldMap>\n      </div>\n    )\n  }\n}\n\nexport default MapContainer\n"]},"metadata":{},"sourceType":"module"}
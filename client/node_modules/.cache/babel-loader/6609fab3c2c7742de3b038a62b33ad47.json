{"ast":null,"code":"import _classCallCheck from \"/Users/daniel/Development/world-factbook/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/daniel/Development/world-factbook/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/daniel/Development/world-factbook/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/daniel/Development/world-factbook/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/daniel/Development/world-factbook/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/daniel/Development/world-factbook/src/containers/LocationContainer.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport UserLocation from '../components/UserLocation';\nimport { fetchUserLocation as _fetchUserLocation } from '../redux/actions/visitActions';\n\nvar LocationContainer =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(LocationContainer, _Component);\n\n  function LocationContainer() {\n    _classCallCheck(this, LocationContainer);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(LocationContainer).apply(this, arguments));\n  }\n\n  _createClass(LocationContainer, [{\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      if (this.props.userLocationLoaded === false) {\n        this.props.fetchUserLocation();\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      debugger;\n      return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19\n        },\n        __self: this\n      }, this.props.currency[0].code));\n    }\n  }]);\n\n  return LocationContainer;\n}(Component);\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    fetchUserLocation: function fetchUserLocation() {\n      return dispatch(_fetchUserLocation());\n    }\n  };\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    userLocation: state.userLocation,\n    userLocationLoaded: state.userLocationLoaded\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(LocationContainer);","map":{"version":3,"sources":["/Users/daniel/Development/world-factbook/src/containers/LocationContainer.js"],"names":["React","Component","connect","UserLocation","fetchUserLocation","LocationContainer","props","userLocationLoaded","currency","code","mapDispatchToProps","dispatch","mapStateToProps","state","userLocation"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,YAAP,MAAyB,4BAAzB;AACA,SAASC,iBAAiB,IAAjBA,kBAAT,QAAkC,+BAAlC;;IAGMC,iB;;;;;;;;;;;;;yCAEiB;AACnB,UAAI,KAAKC,KAAL,CAAWC,kBAAX,KAAkC,KAAtC,EAA6C;AAC3C,aAAKD,KAAL,CAAWF,iBAAX;AACD;AACF;;;6BAEQ;AACP;AACA,aACE,0CACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAM,KAAKE,KAAL,CAAWE,QAAX,CAAoB,CAApB,EAAuBC,IAA7B,CADA,CADF;AAKD;;;;EAf6BR,S;;AAkBhC,IAAMS,kBAAkB,GAAG,SAArBA,kBAAqB,CAACC,QAAD,EAAc;AACvC,SAAO;AACLP,IAAAA,iBAAiB,EAAE;AAAA,aAAMO,QAAQ,CAACP,kBAAiB,EAAlB,CAAd;AAAA;AADd,GAAP;AAGD,CAJD;;AAMA,IAAMQ,eAAe,GAAG,SAAlBA,eAAkB,CAACC,KAAD,EAAW;AACjC,SAAO;AACLC,IAAAA,YAAY,EAAED,KAAK,CAACC,YADf;AAELP,IAAAA,kBAAkB,EAAEM,KAAK,CAACN;AAFrB,GAAP;AAID,CALD;;AAOA,eAAeL,OAAO,CAACU,eAAD,EAAkBF,kBAAlB,CAAP,CAA6CL,iBAA7C,CAAf","sourcesContent":["import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport UserLocation from '../components/UserLocation'\nimport { fetchUserLocation } from '../redux/actions/visitActions'\n\n\nclass LocationContainer extends Component {\n\n  componentDidUpdate() {\n    if (this.props.userLocationLoaded === false) {\n      this.props.fetchUserLocation()\n    }\n  }\n\n  render() {\n    debugger;\n    return(\n      <>\n      <div>{this.props.currency[0].code}</div>\n      </>\n    )\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return({\n    fetchUserLocation: () => dispatch(fetchUserLocation())\n  })\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    userLocation: state.userLocation,\n    userLocationLoaded: state.userLocationLoaded\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(LocationContainer)\n"]},"metadata":{},"sourceType":"module"}
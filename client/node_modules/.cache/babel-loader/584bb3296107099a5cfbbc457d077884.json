{"ast":null,"code":"import _classCallCheck from \"/Users/daniel/Development/world-factbook/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/daniel/Development/world-factbook/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/daniel/Development/world-factbook/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/daniel/Development/world-factbook/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/daniel/Development/world-factbook/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/daniel/Development/world-factbook/src/components/SearchView.js\";\nimport React, { Component } from 'react';\nimport Autosuggest from 'react-autosuggest';\nimport countryNames from '../static/country-names';\n\nvar getSuggestions = function getSuggestions(value) {\n  var inputValue = value.trim().toLowerCase();\n  var inputLength = inputValue.length;\n  return inputLength === 0 ? [] : countryNames.filter(function (country) {\n    return country.name.toLowerCase().slice(0, inputLength) === inputValue;\n  });\n};\n\nvar getSuggestionValue = function getSuggestionValue(suggestion) {\n  return suggestion.name;\n};\n\nvar renderSuggestion = function renderSuggestion(suggestion) {\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, suggestion.name, \" (\", suggestion.alpha_3, \")\");\n};\n\nvar SearchView =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(SearchView, _Component);\n\n  function SearchView() {\n    var _this;\n\n    _classCallCheck(this, SearchView);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(SearchView).call(this));\n\n    _this.onChange = function (event, _ref) {\n      var newValue = _ref.newValue;\n\n      _this.setState({\n        value: newValue\n      });\n    };\n\n    _this.onSuggestionsFetchRequested = function (_ref2) {\n      var value = _ref2.value;\n\n      _this.setState({\n        suggestions: getSuggestions(value)\n      });\n    };\n\n    _this.onSuggestionsClearRequested = function () {\n      _this.setState({\n        suggestions: []\n      });\n    };\n\n    _this.state = {\n      value: '',\n      suggestions: []\n    };\n    return _this;\n  }\n\n  _createClass(SearchView, [{\n    key: \"render\",\n    value: function render() {\n      debugger;\n      var _this$state = this.state,\n          value = _this$state.value,\n          suggestions = _this$state.suggestions;\n      var inputProps = {\n        placeholder: 'Country',\n        value: value,\n        onChange: this.onChange\n      };\n      return React.createElement(Autosuggest, {\n        suggestions: suggestions,\n        onSuggestionsFetchRequested: this.onSuggestionsFetchRequested,\n        onSuggestionsClearRequested: this.onSuggestionsClearRequested,\n        getSuggestionValue: getSuggestionValue,\n        renderSuggestion: renderSuggestion,\n        inputProps: inputProps,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      });\n    }\n  }]);\n\n  return SearchView;\n}(Component);\n\nexport default SearchView;","map":{"version":3,"sources":["/Users/daniel/Development/world-factbook/src/components/SearchView.js"],"names":["React","Component","Autosuggest","countryNames","getSuggestions","value","inputValue","trim","toLowerCase","inputLength","length","filter","country","name","slice","getSuggestionValue","suggestion","renderSuggestion","alpha_3","SearchView","onChange","event","newValue","setState","onSuggestionsFetchRequested","suggestions","onSuggestionsClearRequested","state","inputProps","placeholder"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,WAAP,MAAwB,mBAAxB;AACA,OAAOC,YAAP,MAAyB,yBAAzB;;AAGA,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,CAAAC,KAAK,EAAI;AAC9B,MAAMC,UAAU,GAAGD,KAAK,CAACE,IAAN,GAAaC,WAAb,EAAnB;AACA,MAAMC,WAAW,GAAGH,UAAU,CAACI,MAA/B;AAEA,SAAOD,WAAW,KAAK,CAAhB,GAAoB,EAApB,GAAyBN,YAAY,CAACQ,MAAb,CAAoB,UAAAC,OAAO;AAAA,WACzDA,OAAO,CAACC,IAAR,CAAaL,WAAb,GAA2BM,KAA3B,CAAiC,CAAjC,EAAoCL,WAApC,MAAqDH,UADI;AAAA,GAA3B,CAAhC;AAGD,CAPD;;AASA,IAAMS,kBAAkB,GAAG,SAArBA,kBAAqB,CAAAC,UAAU;AAAA,SAAIA,UAAU,CAACH,IAAf;AAAA,CAArC;;AAEA,IAAMI,gBAAgB,GAAG,SAAnBA,gBAAmB,CAAAD,UAAU;AAAA,SACjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGA,UAAU,CAACH,IADd,QACsBG,UAAU,CAACE,OADjC,MADiC;AAAA,CAAnC;;IAMMC,U;;;;;AACJ,wBAAc;AAAA;;AAAA;;AACZ;;AADY,UAQdC,QARc,GAQH,UAACC,KAAD,QAAyB;AAAA,UAAfC,QAAe,QAAfA,QAAe;;AAClC,YAAKC,QAAL,CAAc;AACZlB,QAAAA,KAAK,EAAEiB;AADK,OAAd;AAGD,KAZa;;AAAA,UAcdE,2BAdc,GAce,iBAAa;AAAA,UAAXnB,KAAW,SAAXA,KAAW;;AACxC,YAAKkB,QAAL,CAAc;AACZE,QAAAA,WAAW,EAAErB,cAAc,CAACC,KAAD;AADf,OAAd;AAGD,KAlBa;;AAAA,UAoBdqB,2BApBc,GAoBgB,YAAM;AAClC,YAAKH,QAAL,CAAc;AACZE,QAAAA,WAAW,EAAE;AADD,OAAd;AAGD,KAxBa;;AAEZ,UAAKE,KAAL,GAAa;AACXtB,MAAAA,KAAK,EAAE,EADI;AAEXoB,MAAAA,WAAW,EAAE;AAFF,KAAb;AAFY;AAMb;;;;6BAoBQ;AACP;AADO,wBAEwB,KAAKE,KAF7B;AAAA,UAECtB,KAFD,eAECA,KAFD;AAAA,UAEQoB,WAFR,eAEQA,WAFR;AAIP,UAAMG,UAAU,GAAG;AACjBC,QAAAA,WAAW,EAAE,SADI;AAEjBxB,QAAAA,KAAK,EAALA,KAFiB;AAGjBe,QAAAA,QAAQ,EAAE,KAAKA;AAHE,OAAnB;AAME,aACA,oBAAC,WAAD;AACE,QAAA,WAAW,EAAEK,WADf;AAEE,QAAA,2BAA2B,EAAE,KAAKD,2BAFpC;AAGE,QAAA,2BAA2B,EAAE,KAAKE,2BAHpC;AAIE,QAAA,kBAAkB,EAAEX,kBAJtB;AAKE,QAAA,gBAAgB,EAAEE,gBALpB;AAME,QAAA,UAAU,EAAEW,UANd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADA;AAUD;;;;EA/CoB3B,S;;AAkDzB,eAAekB,UAAf","sourcesContent":["import React, { Component } from 'react';\nimport Autosuggest from 'react-autosuggest'\nimport countryNames from '../static/country-names'\n\n\nconst getSuggestions = value => {\n  const inputValue = value.trim().toLowerCase();\n  const inputLength = inputValue.length;\n\n  return inputLength === 0 ? [] : countryNames.filter(country =>\n    country.name.toLowerCase().slice(0, inputLength) === inputValue\n  );\n}\n\nconst getSuggestionValue = suggestion => suggestion.name;\n\nconst renderSuggestion = suggestion => (\n  <div>\n    {suggestion.name} ({suggestion.alpha_3})\n  </div>\n)\n\nclass SearchView extends Component {\n  constructor() {\n    super()\n    this.state = {\n      value: '',\n      suggestions: []\n    }\n  }\n\n  onChange = (event, { newValue }) => {\n    this.setState({\n      value: newValue\n    })\n  }\n\n  onSuggestionsFetchRequested =({value}) => {\n    this.setState({\n      suggestions: getSuggestions(value)\n    })\n  }\n\n  onSuggestionsClearRequested = () => {\n    this.setState({\n      suggestions: []\n    })\n  }\n\n  render() {\n    debugger\n    const { value, suggestions } = this.state\n\n    const inputProps = {\n      placeholder: 'Country',\n      value,\n      onChange: this.onChange\n    }\n\n      return (\n      <Autosuggest\n        suggestions={suggestions}\n        onSuggestionsFetchRequested={this.onSuggestionsFetchRequested}\n        onSuggestionsClearRequested={this.onSuggestionsClearRequested}\n        getSuggestionValue={getSuggestionValue}\n        renderSuggestion={renderSuggestion}\n        inputProps={inputProps}\n      />\n    )\n    }\n}\n\nexport default SearchView\n"]},"metadata":{},"sourceType":"module"}
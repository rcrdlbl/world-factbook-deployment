{"ast":null,"code":"import _classCallCheck from \"/Users/daniel/Development/world-factbook/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/daniel/Development/world-factbook/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/daniel/Development/world-factbook/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/daniel/Development/world-factbook/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/daniel/Development/world-factbook/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/daniel/Development/world-factbook/src/containers/CurrencyExchangeContainer.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { createCurrencyExchange as _createCurrencyExchange } from '../redux/actions/visitActions';\nimport CurrencyExchangeForm from '../components/CurrencyExchangeForm';\nimport ExchangeView from '../components/ExchangeView';\nimport PreviousExchanges from '../components/PreviousExchanges';\n\nvar CurrencyExchangeContainer =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(CurrencyExchangeContainer, _Component);\n\n  function CurrencyExchangeContainer() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, CurrencyExchangeContainer);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(CurrencyExchangeContainer)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      userCurrencyName: ''\n    };\n\n    _this.onCurrencyFormSubmit = function (suggestion) {\n      fetch(\"https://restcountries.eu/rest/v2/alpha/\".concat(suggestion)).then(function (response) {\n        return response.json();\n      }).then(function (data) {\n        _this.setState({\n          userCurrencyName: data.currencies[0].name\n        });\n\n        _this.props.createCurrencyExchange({\n          selected_currency: _this.props.currency[0].code,\n          user_currency: data.currencies[0].code\n        });\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(CurrencyExchangeContainer, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.fetchExchanges(this.props.currency[0].code);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }, \"1\"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }, this.props.currency[0].name), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }, \"equals\"), React.createElement(ExchangeView, {\n        userCurrencyName: this.state.userCurrencyName,\n        exchange: this.props.exchange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }), React.createElement(CurrencyExchangeForm, {\n        onCurrencyFormSubmit: this.onCurrencyFormSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }), React.createElement(PreviousExchanges, {\n        exchanges: this.props.exchanges,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return CurrencyExchangeContainer;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    exchange: state.visits.exchange,\n    exchanges: state.visits.exchanges\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    createCurrencyExchange: function createCurrencyExchange(currencies) {\n      return dispatch(_createCurrencyExchange(currencies));\n    },\n    fetchExchanges: function (_fetchExchanges) {\n      function fetchExchanges(_x) {\n        return _fetchExchanges.apply(this, arguments);\n      }\n\n      fetchExchanges.toString = function () {\n        return _fetchExchanges.toString();\n      };\n\n      return fetchExchanges;\n    }(function (countryCode) {\n      return dispatch(fetchExchanges(countryCode));\n    })\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CurrencyExchangeContainer);","map":{"version":3,"sources":["/Users/daniel/Development/world-factbook/src/containers/CurrencyExchangeContainer.js"],"names":["React","Component","connect","createCurrencyExchange","CurrencyExchangeForm","ExchangeView","PreviousExchanges","CurrencyExchangeContainer","state","userCurrencyName","onCurrencyFormSubmit","suggestion","fetch","then","response","json","data","setState","currencies","name","props","selected_currency","currency","code","user_currency","fetchExchanges","exchange","exchanges","mapStateToProps","visits","mapDispatchToProps","dispatch","countryCode"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,sBAAsB,IAAtBA,uBAAT,QAAuC,+BAAvC;AACA,OAAOC,oBAAP,MAAiC,oCAAjC;AACA,OAAOC,YAAP,MAAyB,4BAAzB;AACA,OAAOC,iBAAP,MAA8B,iCAA9B;;IAEMC,yB;;;;;;;;;;;;;;;;;UAEJC,K,GAAQ;AACNC,MAAAA,gBAAgB,EAAE;AADZ,K;;UAQRC,oB,GAAuB,UAACC,UAAD,EAAgB;AACrCC,MAAAA,KAAK,kDAA2CD,UAA3C,EAAL,CAA8DE,IAA9D,CAAmE,UAAAC,QAAQ;AAAA,eAAIA,QAAQ,CAACC,IAAT,EAAJ;AAAA,OAA3E,EACCF,IADD,CACM,UAAAG,IAAI,EAAI;AACZ,cAAKC,QAAL,CAAc;AACZR,UAAAA,gBAAgB,EAAEO,IAAI,CAACE,UAAL,CAAgB,CAAhB,EAAmBC;AADzB,SAAd;;AAGA,cAAKC,KAAL,CAAWjB,sBAAX,CAAkC;AAACkB,UAAAA,iBAAiB,EAAE,MAAKD,KAAL,CAAWE,QAAX,CAAoB,CAApB,EAAuBC,IAA3C;AAAiDC,UAAAA,aAAa,EAAER,IAAI,CAACE,UAAL,CAAgB,CAAhB,EAAmBK;AAAnF,SAAlC;AACD,OAND;AAOD,K;;;;;;;wCAZmB;AAClB,WAAKH,KAAL,CAAWK,cAAX,CAA0B,KAAKL,KAAL,CAAWE,QAAX,CAAoB,CAApB,EAAuBC,IAAjD;AACD;;;6BAYQ;AACP,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAI,KAAKH,KAAL,CAAWE,QAAX,CAAoB,CAApB,EAAuBH,IAA3B,CAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHF,EAIE,oBAAC,YAAD;AAAc,QAAA,gBAAgB,EAAE,KAAKX,KAAL,CAAWC,gBAA3C;AAA6D,QAAA,QAAQ,EAAE,KAAKW,KAAL,CAAWM,QAAlF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJF,EAKE,oBAAC,oBAAD;AAAsB,QAAA,oBAAoB,EAAE,KAAKhB,oBAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QALF,EAME,oBAAC,iBAAD;AAAmB,QAAA,SAAS,EAAE,KAAKU,KAAL,CAAWO,SAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QANF,CADF;AAUD;;;;EA/BqC1B,S;;AAkCxC,IAAM2B,eAAe,GAAG,SAAlBA,eAAkB,CAACpB,KAAD,EAAW;AACjC,SAAO;AACLkB,IAAAA,QAAQ,EAAElB,KAAK,CAACqB,MAAN,CAAaH,QADlB;AAELC,IAAAA,SAAS,EAAEnB,KAAK,CAACqB,MAAN,CAAaF;AAFnB,GAAP;AAID,CALD;;AAOA,IAAMG,kBAAkB,GAAG,SAArBA,kBAAqB,CAACC,QAAD,EAAc;AACvC,SAAO;AACL5B,IAAAA,sBAAsB,EAAE,gCAACe,UAAD;AAAA,aAAgBa,QAAQ,CAAC5B,uBAAsB,CAACe,UAAD,CAAvB,CAAxB;AAAA,KADnB;AAELO,IAAAA,cAAc;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA,MAAE,UAACO,WAAD;AAAA,aAAiBD,QAAQ,CAACN,cAAc,CAACO,WAAD,CAAf,CAAzB;AAAA,KAAF;AAFT,GAAP;AAID,CALD;;AAOA,eAAe9B,OAAO,CAAC0B,eAAD,EAAkBE,kBAAlB,CAAP,CAA6CvB,yBAA7C,CAAf","sourcesContent":["import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { createCurrencyExchange } from '../redux/actions/visitActions'\nimport CurrencyExchangeForm from '../components/CurrencyExchangeForm'\nimport ExchangeView from '../components/ExchangeView'\nimport PreviousExchanges from '../components/PreviousExchanges'\n\nclass CurrencyExchangeContainer extends Component {\n\n  state = {\n    userCurrencyName: ''\n  }\n\n  componentDidMount() {\n    this.props.fetchExchanges(this.props.currency[0].code)\n  }\n\n  onCurrencyFormSubmit = (suggestion) => {\n    fetch(`https://restcountries.eu/rest/v2/alpha/${suggestion}`).then(response => response.json())\n    .then(data => {\n      this.setState({\n        userCurrencyName: data.currencies[0].name\n      })\n      this.props.createCurrencyExchange({selected_currency: this.props.currency[0].code, user_currency: data.currencies[0].code})\n    })\n  }\n\n  render() {\n    return (\n      <div>\n        <h2>1</h2>\n        <p>{this.props.currency[0].name}</p>\n        <p>equals</p>\n        <ExchangeView userCurrencyName={this.state.userCurrencyName} exchange={this.props.exchange} />\n        <CurrencyExchangeForm onCurrencyFormSubmit={this.onCurrencyFormSubmit} />\n        <PreviousExchanges exchanges={this.props.exchanges}/>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    exchange: state.visits.exchange,\n    exchanges: state.visits.exchanges\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    createCurrencyExchange: (currencies) => dispatch(createCurrencyExchange(currencies)),\n    fetchExchanges: (countryCode) => dispatch(fetchExchanges(countryCode))\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CurrencyExchangeContainer)\n"]},"metadata":{},"sourceType":"module"}
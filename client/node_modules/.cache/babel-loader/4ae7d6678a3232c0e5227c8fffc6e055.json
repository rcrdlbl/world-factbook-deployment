{"ast":null,"code":"import _toConsumableArray from \"/Users/daniel/Development/world-factbook-deployment/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _objectSpread from \"/Users/daniel/Development/world-factbook-deployment/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar initialState = {\n  exchanges: [],\n  exchange: {}\n};\nexport default (function () {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case \"FETCH_EXCHANGES_SUCCESS\":\n      return _objectSpread({}, state, {\n        exchanges: action.payload\n      });\n\n    case \"ADD_EXCHANGE_SUCCESS\":\n      return _objectSpread({}, state, {\n        exchange: action.payload,\n        exchanges: [].concat(_toConsumableArray(state.exchanges), [action.payload])\n      });\n\n    case \"USER_LOCATION_FETCH_SUCCESS\":\n      return _objectSpread({}, state, {\n        userLocation: action.payload,\n        userLocationLoaded: true\n      });\n\n    default:\n      return state;\n  }\n});","map":{"version":3,"sources":["/Users/daniel/Development/world-factbook-deployment/client/src/redux/reducers/visitsReducer.js"],"names":["initialState","exchanges","exchange","state","action","type","payload","userLocation","userLocationLoaded"],"mappings":";;AAAA,IAAMA,YAAY,GAAG;AACnBC,EAAAA,SAAS,EAAE,EADQ;AAEnBC,EAAAA,QAAQ,EAAE;AAFS,CAArB;AAKA,gBAAe,YAAkC;AAAA,MAAjCC,KAAiC,uEAAzBH,YAAyB;AAAA,MAAXI,MAAW;;AAC/C,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,yBAAL;AACE,+BAAYF,KAAZ;AAAmBF,QAAAA,SAAS,EAAEG,MAAM,CAACE;AAArC;;AACF,SAAK,sBAAL;AACE,+BACKH,KADL;AAEED,QAAAA,QAAQ,EAAEE,MAAM,CAACE,OAFnB;AAGEL,QAAAA,SAAS,+BAAME,KAAK,CAACF,SAAZ,IAAuBG,MAAM,CAACE,OAA9B;AAHX;;AAKF,SAAK,6BAAL;AACE,+BACKH,KADL;AAEEI,QAAAA,YAAY,EAAEH,MAAM,CAACE,OAFvB;AAGEE,QAAAA,kBAAkB,EAAE;AAHtB;;AAKF;AACE,aAAOL,KAAP;AAhBJ;AAkBD,CAnBD","sourcesContent":["const initialState = {\n  exchanges: [],\n  exchange: {}\n};\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case \"FETCH_EXCHANGES_SUCCESS\":\n      return { ...state, exchanges: action.payload };\n    case \"ADD_EXCHANGE_SUCCESS\":\n      return {\n        ...state,\n        exchange: action.payload,\n        exchanges: [...state.exchanges, action.payload]\n      };\n    case \"USER_LOCATION_FETCH_SUCCESS\":\n      return {\n        ...state,\n        userLocation: action.payload,\n        userLocationLoaded: true\n      };\n    default:\n      return state;\n  }\n};\n"]},"metadata":{},"sourceType":"module"}
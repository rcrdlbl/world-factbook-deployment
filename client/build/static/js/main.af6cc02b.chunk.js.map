{"version":3,"sources":["static/wikilogo.svg","static/reticle_animated.svg","components/MapView.js","components/SearchView.js","containers/MapContainer.js","App.js","components/CountryBasic.js","components/WikiView.js","components/CurrencyExchangeForm.js","components/ExchangeView.js","components/PreviousExchange.js","containers/CurrencyExchangeContainer.js","redux/actions/visitActions.js","containers/CountryContainer.js","components/CountryListView.js","components/CreditsView.js","redux/reducers/visitsReducer.js","redux/index.js","serviceWorker.js","index.js","routes.js"],"names":["module","exports","__webpack_require__","p","mapStyles","width","maxWidth","margin","MapView","state","rotation","startAnimation","_this","setState","this","autorotation","timer","_this2","react_default","a","createElement","lib","height","projection","projectionConfig","scale","style","center","props","mapCenter","reverse","disablePanning","cx","cy","r","fill","stroke","disableOptimization","geography","geoData","geos","proj","map","geo","i","key","id","onClick","handleGeographyClick","default","hover","pressed","outline","globe","step","Component","defaultProps","getSuggestions","value","inputValue","trim","toLowerCase","inputLength","length","countryNames","filter","country","name","slice","getSuggestionValue","suggestion","renderSuggestion","SearchView","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","onChange","event","_ref","newValue","onSuggestionsFetchRequested","_ref2","suggestions","onSuggestionsClearRequested","onSuggestionSelected","_ref3","countryUrl","window","location","replace","_this$state","inputProps","placeholder","dist_default","highlightFirstSuggestion","MapContainer","searchTerm","components_SearchView","components_MapView","className","react_router_dom","to","href","App","containers_MapContainer","CountryBasic","Fragment","countryInfo","nativeName","alt","src","flag","WikiView","wikiLogo","wikiInfo","query","pages","keys","extract","CurrencyExchangeForm","onCurrencyFormSubmit","ExchangeView","exchange","result","userCurrencyName","PreviousExchange","selected_currency","user_currency","CurrencyExchangeContainer","fetch","concat","then","response","json","data","currencies","createCurrencyExchange","currency","code","fetchExchanges","exchanges","components_PreviousExchange","components_ExchangeView","components_CurrencyExchangeForm","renderPreviousExchanges","connect","visits","dispatch","method","headers","Accept","Content-Type","body","JSON","stringify","console","log","type","payload","countryCode","CountryContainer","wikiLoading","infoLoading","findCountryName","fetchWikiData","countryName","match","params","countryId","fetchData","components_CountryBasic","components_WikiView","latlng","react_svg","reticle","svgClassName","containers_CurrencyExchangeContainer","CountryListView","CreditsView","initialState","rootReducer","combineReducers","arguments","undefined","action","objectSpread","toConsumableArray","userLocation","userLocationLoaded","createStore","composeWithDevTools","applyMiddleware","thunk","Boolean","hostname","ReactDOM","render","es","store","react_router","exact","path","component","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.af6cc02b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/wikilogo.addf033f.svg\";","module.exports = __webpack_public_path__ + \"static/media/reticle_animated.d89398d5.svg\";","import React, { Component } from 'react';\nimport geoData from '../static/world-50m.json'\nimport {\n  ComposableMap,\n  ZoomableGlobe,\n  Geographies,\n  Geography,\n  Graticule,\n} from \"react-simple-maps\"\nimport { timer } from 'd3-timer'\n\n\nconst mapStyles = {\n  width: \"100%\",\n  maxWidth: \"100%\",\n  margin: \"0 auto\",\n}\n\nclass MapView extends Component {\n  state = {\n    rotation: [0, 0],\n  }\n\n  startAnimation = () => {\n    const rotation = [this.state.rotation[0] + 0.5, this.state.rotation[1] - 0.18]\n    this.setState({ rotation })\n  }\n\n  componentDidMount() {\n    this.autorotation = timer(this.startAnimation)\n  }\n\n\n  render() {\n    return(\n      <div>\n        <ComposableMap\n          width={500}\n          height={500}\n          projection=\"orthographic\"\n          projectionConfig={{ scale: 220 }}\n          style={mapStyles}\n        >\n          <ZoomableGlobe center={this.props.mapCenter ? this.props.mapCenter.reverse() : this.state.rotation} disablePanning>\n            <circle cx={250} cy={250} r={220} fill=\"transparent\" stroke=\"#CFD8DC\" />\n            <Geographies\n              disableOptimization\n              geography={geoData}\n            >\n              {(geos, proj) =>\n                geos.map((geo, i) => (\n                  <Geography\n                    key={geo.id + i}\n                    geography={geo}\n                    projection={proj}\n                    onClick={this.props.handleGeographyClick}\n                    style={{\n                      default: {\n                        fill: \"#637079\",\n                        stroke: \"#CCD7DD\",\n                      },\n                       hover: {\n                         fill: \"#CCD7DD\",\n                         stroke: \"#637079\"\n                       },\n                       pressed: {\n                         fill: \"#FFF\",\n                         stroke: \"#000\",\n                         outline: \"none\",\n                       }\n                    }}\n                  />\n                ))\n              }\n            </Geographies>\n            <Graticule globe={true} stroke={\"#637079\"} outline={false} step={[10, 10]} />\n          </ZoomableGlobe>\n        </ComposableMap>\n      </div>\n    )\n  }\n}\n\n\n\nMapView.defaultProps = {\n  center: [0, 0]\n}\n\nexport default MapView\n","import React, { Component } from 'react';\nimport Autosuggest from 'react-autosuggest'\nimport countryNames from '../static/country-names'\n\n\n\nconst getSuggestions = value => {\n  const inputValue = value.trim().toLowerCase();\n  const inputLength = inputValue.length;\n\n  return inputLength === 0 ? [] : countryNames.filter(country =>\n    country.name.toLowerCase().slice(0, inputLength) === inputValue\n  );\n}\n\nconst getSuggestionValue = suggestion => suggestion.name;\n\nconst renderSuggestion = suggestion => (\n  <div>\n    {suggestion.name} -- {suggestion[\"alpha-3\"]}\n  </div>\n)\n\nclass SearchView extends Component {\n  constructor() {\n    super()\n    this.state = {\n      value: '',\n      suggestions: []\n    }\n  }\n\n  onChange = (event, { newValue }) => {\n    this.setState({\n      value: newValue\n    })\n  }\n\n  onSuggestionsFetchRequested =({value}) => {\n    this.setState({\n      suggestions: getSuggestions(value)\n    })\n  }\n\n  onSuggestionsClearRequested = () => {\n    this.setState({\n      suggestions: []\n    })\n  }\n\n  onSuggestionSelected = (event, {suggestion}) => {\n    const countryUrl = '/countries/' + suggestion['alpha-3']\n    window.location.replace(countryUrl)\n  }\n\n  render() {\n    const { value, suggestions } = this.state\n\n    const inputProps = {\n      placeholder: 'Input Country',\n      value,\n      onChange: this.onChange\n    }\n\n      return (\n      <Autosuggest\n        suggestions={suggestions}\n        onSuggestionsFetchRequested={this.onSuggestionsFetchRequested}\n        onSuggestionsClearRequested={this.onSuggestionsClearRequested}\n        getSuggestionValue={getSuggestionValue}\n        highlightFirstSuggestion={true}\n        renderSuggestion={renderSuggestion}\n        inputProps={inputProps}\n        onSuggestionSelected={this.onSuggestionSelected}\n      />\n    )\n  }\n}\n\nexport default SearchView\n","import React, { Component } from 'react';\nimport MapView from '../components/MapView'\nimport SearchView from '../components/SearchView'\nimport { Link } from 'react-router-dom'\n\n\nclass MapContainer extends Component {\n  state = {\n    searchTerm: '',\n  }\n\n  render() {\n    return (\n      <div>\n        <SearchView />\n        <MapView className=\"frontMap\"></MapView>\n        <div className='creditsLink'>WORLD FACTBOOK <Link to='/credits'>credits</Link> <a href='http://przemyslaw.org'>przemyslaw.org</a></div>\n      </div>\n    )\n  }\n}\n\nexport default MapContainer\n","import React, { Component } from 'react';\nimport './App.css';\nimport MapContainer from './containers/MapContainer'\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n      <MapContainer />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React, { Component } from 'react'\nimport { Link } from 'react-router-dom'\n\nclass CountryBasic extends Component {\n  render() {\n    return (\n      <>\n      <div className=\"countryBasic\">\n        <Link to=\"/\" className=\"searchLink\">««search</Link>\n        <h1>{this.props.countryInfo.name}</h1>\n        <h1 className=\"countryNativeName\">{this.props.countryInfo.nativeName}</h1>\n        <img alt={\"Flag of\" + this.props.countryInfo.name} className=\"countryflag\" src={this.props.countryInfo.flag}></img>\n      </div>\n      </>\n    )\n  }\n}\n\nexport default CountryBasic\n","import React, { Component } from 'react'\nimport wikiLogo from '../static/wikilogo.svg'\n\nclass WikiView extends Component {\n\n  render() {\n    return (\n      <>\n      <h3><img className=\"wikiLogo\" alt=\"Wikipedia Logo\" src={wikiLogo}></img></h3>\n      <div className=\"wikiextract\">{this.props.wikiInfo.query.pages[Object.keys(this.props.wikiInfo.query.pages)[0]].extract}</div>\n      </>\n    )\n  }\n}\n\nexport default WikiView\n","import React, {Component} from 'react'\nimport Autosuggest from 'react-autosuggest'\nimport countryNames from '../static/country-names'\n\nconst getSuggestions = value => {\n  const inputValue = value.trim().toLowerCase()\n  const inputLength = inputValue.length\n\n  return inputLength === 0 ? [] : countryNames.filter(country =>\n    country.name.toLowerCase().slice(0, inputLength) === inputValue\n  )\n}\n\nconst getSuggestionValue = suggestion => suggestion.name\n\nconst renderSuggestion = suggestion => (\n  <div>\n    {suggestion.name}\n  </div>\n)\n\n\nclass CurrencyExchangeForm extends Component {\n  constructor() {\n    super()\n\n    this.state = {\n      value: '',\n      suggestions: []\n    }\n  }\n\n  onChange = (event, {newValue}) => {\n    this.setState({\n      value: newValue\n    })\n  }\n\n  onSuggestionsFetchRequested = ({value}) => {\n    this.setState({\n      suggestions: getSuggestions(value)\n    })\n  }\n\n  onSuggestionsClearRequested = () => {\n    this.setState({\n      suggestions: []\n    })\n  }\n\n  onSuggestionSelected = (event, {suggestion}) => {\n    this.props.onCurrencyFormSubmit(suggestion['alpha-3'])\n  }\n\n  render() {\n    const { value, suggestions } = this.state\n\n    const inputProps = {\n      placeholder: 'Enter Country',\n      value,\n      onChange: this.onChange\n    }\n\n    return (\n      <Autosuggest\n        suggestions={suggestions}\n        onSuggestionsFetchRequested={this.onSuggestionsFetchRequested}\n        onSuggestionsClearRequested={this.onSuggestionsClearRequested}\n        getSuggestionValue={getSuggestionValue}\n        renderSuggestion={renderSuggestion}\n        onSuggestionSelected={this.onSuggestionSelected}\n        inputProps={inputProps}\n      />\n    )\n  }\n}\n\n\nexport default CurrencyExchangeForm\n","import React, { Component } from 'react'\n\nclass ExchangeView extends Component {\n\n  render() {\n    return (\n      <div>\n        {!this.props.exchange && <h2>~</h2>}\n        {this.props.exchange && <h2>{this.props.exchange.result}</h2>}\n        {!this.props.userCurrencyName && <p>~~~</p>}\n        {this.props.userCurrencyName && <p>{this.props.userCurrencyName}</p>}\n      </div>\n    )\n  }\n}\n\nexport default ExchangeView\n","import React, { Component } from 'react'\n\nclass PreviousExchange extends Component {\n\n  render() {\n    return(\n      <div>1 {this.props.exchange.selected_currency} = {this.props.exchange.result} {this.props.exchange.user_currency}</div>\n    )\n  }\n}\n\nexport default PreviousExchange\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { createCurrencyExchange, fetchExchanges } from '../redux/actions/visitActions'\nimport CurrencyExchangeForm from '../components/CurrencyExchangeForm'\nimport ExchangeView from '../components/ExchangeView'\nimport PreviousExchange from '../components/PreviousExchange'\n\nclass CurrencyExchangeContainer extends Component {\n\n  state = {\n    userCurrencyName: ''\n  }\n\n  componentDidMount() {\n    this.props.fetchExchanges(this.props.currency[0].code)\n  }\n\n  onCurrencyFormSubmit = (suggestion) => {\n    fetch(`https://restcountries.eu/rest/v2/alpha/${suggestion}`).then(response => response.json())\n    .then(data => {\n      this.setState({\n        userCurrencyName: data.currencies[0].name\n      })\n      this.props.createCurrencyExchange({selected_currency: this.props.currency[0].code, user_currency: data.currencies[0].code})\n    })\n  }\n\n  renderPreviousExchanges() {\n    if (!this.props.exchanges) {\n      return <p>No Previous Exchanges</p>\n    } else {\n      return this.props.exchanges.map(exchange => <PreviousExchange key={exchange.id} exchange={exchange} />)\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"currencyGrid\">\n        <div>\n          <h2>1</h2>\n          <p>{this.props.currency[0].name}</p>\n        </div>\n        <div>\n          <ExchangeView userCurrencyName={this.state.userCurrencyName} exchange={this.props.exchange} />\n          <CurrencyExchangeForm onCurrencyFormSubmit={this.onCurrencyFormSubmit} />\n        </div>\n        <div className=\"exchangeHistory\">\n          <p>Exchange History</p>\n          {this.renderPreviousExchanges()}\n        </div>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    exchange: state.visits.exchange,\n    exchanges: state.visits.exchanges\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    createCurrencyExchange: (currencies) => dispatch(createCurrencyExchange(currencies)),\n    fetchExchanges: (countryCode) => dispatch(fetchExchanges(countryCode))\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CurrencyExchangeContainer)\n","export const createCurrencyExchange = (currencies) => dispatch => {\n  return fetch('/currency_exchanges', {\n    method: 'POST',\n    headers: {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(currencies)\n  })\n  .then(response => response.json())\n  .then(exchange => {\n    console.log(exchange)\n    dispatch({type: 'ADD_EXCHANGE_SUCCESS', payload: exchange})\n  })\n}\n\nexport const fetchExchanges = (countryCode) => dispatch => {\n  return fetch(`/currency_exchanges/${countryCode}`)\n  .then(response => response.json())\n  .then(exchanges => dispatch({type: 'FETCH_EXCHANGES_SUCCESS', payload: exchanges}))\n}\n","import React, { Component } from 'react'\nimport CountryBasic from '../components/CountryBasic'\nimport WikiView from '../components/WikiView'\nimport countryNames from '../static/country-names'\nimport MapView from '../components/MapView'\nimport reticle from '../static/reticle_animated.svg'\nimport CurrencyExchangeContainer from './CurrencyExchangeContainer'\nimport ReactSVG from 'react-svg'\n\n\nclass CountryContainer extends Component {\n  state = {\n    countryInfo: [],\n    wikiInfo: [],\n    wikiLoading: true,\n    infoLoading: true\n  }\n\n  findCountryName = (countryCode) => {\n    const found = countryNames.filter(\n      function(country) {return country['alpha-3'] === countryCode}\n    )\n    return found[0].name\n  }\n\n\n  componentDidMount() {\n    this.fetchData()\n    this.fetchWikiData()\n  }\n\n  fetchWikiData = () => {\n      const countryName =  this.findCountryName(this.props.match.params.countryId)\n      fetch(`https://en.wikipedia.org/w/api.php?&origin=*&format=json&action=query&prop=extracts&exintro&explaintext&redirects=1&titles=${countryName}`)\n      .then(response => response.json())\n      .then(data => {\n        this.setState({\n          wikiInfo: data,\n          wikiLoading: false\n        })\n      })\n  }\n\n  fetchData = () => {\n    const countryId = this.props.match.params.countryId\n    fetch(`https://restcountries.eu/rest/v2/alpha/${countryId}`).then(response => response.json()).then(data => {\n      this.setState({\n        countryInfo: data,\n        infoLoading: false\n      })\n    })\n  }\n\n  render() {\n    return(\n      <>\n      <div className=\"countryGrid\">\n        <div className=\"box box1\">\n          <CountryBasic countryInfo={this.state.countryInfo}  />\n        </div>\n        <div className=\"box box2\">\n          {this.state.wikiLoading && <h3>Wikipedia Loading</h3>}\n          {!this.state.wikiLoading && <WikiView wikiInfo={this.state.wikiInfo}  />}\n        </div>\n        <div className=\"box box3\">\n          <div className=\"countryGlobe\">\n            <MapView className=\"MapView\" mapCenter={this.state.countryInfo.latlng} />\n            <ReactSVG src={reticle} svgClassName=\"reticle\" />\n          </div>\n        </div>\n        <div className=\"box box4\">\n          {this.state.infoLoading && <h3>Forex Loading</h3>}\n          {!this.state.infoLoading && <CurrencyExchangeContainer  currency={this.state.countryInfo.currencies} />}\n        </div>\n      </div>\n      </>\n    )\n  }\n}\n// TODO: make wikipedia component\n\nexport default CountryContainer\n","import React, { Component } from 'react';\nimport countryNames from '../static/country-names'\nimport { Link } from 'react-router-dom'\n\nclass CountryListView extends Component {\n  render() {\n    return (\n      <div className=\"allCountries\">{countryNames.map(country => <Link to={'/countries/' + country['alpha-3']}>{country.name},</Link>)}</div>\n    )\n  }\n}\n\nexport default CountryListView\n","import React from 'react'\nimport { Link } from 'react-router-dom'\n\nconst CreditsView = () => {\n  return (\n    <>\n    <div className='CountryBasic'>\n      <Link to=\"/\" className=\"searchLink\">««back</Link>\n    </div>\n    <div>\n      avara font: Raphaël Bastide <a href=\"https://www.velvetyne.fr/fonts/avara/\">src</a>\n    </div>\n    <div>\n      targeting reticle: Wikimedia Commons <a href=\"https://commons.wikimedia.org/wiki/File:PSO1-reticle.svg\">src</a>\n    </div>\n    <div>\n      country info paragraphs: wikipedia\n    </div>\n    <div>\n      map topography: naturalearth\n    </div>\n    </>\n  )\n}\n\nexport default CreditsView\n","const initialState = {\n  exchanges: [],\n  exchange: {},\n}\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case 'FETCH_EXCHANGES_SUCCESS':\n      return {...state, exchanges: action.payload}\n    case 'ADD_EXCHANGE_SUCCESS':\n      return {...state, exchange: action.payload, exchanges: [...state.exchanges, action.payload]}\n    case 'USER_LOCATION_FETCH_SUCCESS':\n      return {...state, userLocation: action.payload, userLocationLoaded: true}\n    default:\n      return state\n  }\n}\n","import { combineReducers, createStore, applyMiddleware } from 'redux'\nimport thunk from 'redux-thunk'\nimport visits from './reducers/visitsReducer'\nimport {composeWithDevTools} from 'redux-devtools-extension'\n\nconst rootReducer = combineReducers({\n  visits\n})\n\nexport default createStore(rootReducer, composeWithDevTools(\n    applyMiddleware(thunk)\n  )\n)\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport { Routes } from \"./routes\";\nimport \"./index.css\";\nimport { Provider } from \"react-redux\";\nimport store from \"./redux/index\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <Router>\n      <Routes />\n    </Router>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React from \"react\";\nimport App from \"./App\";\nimport CountryContainer from \"./containers/CountryContainer\";\nimport CountryListView from \"./components/CountryListView\";\nimport CreditsView from \"./components/CreditsView\";\nimport { Route, Switch } from \"react-router-dom\";\n\nexport const Routes = () => {\n  return (\n    <div>\n      <Switch>\n        <Route exact path=\"/\" component={App} />\n        <Route exact path=\"/countries\" component={CountryListView} />\n        <Route exact path=\"/credits\" component={CreditsView} />\n        <Route path=\"/countries/:countryId\" component={CountryContainer} />\n      </Switch>\n    </div>\n  );\n};\n"],"sourceRoot":""}